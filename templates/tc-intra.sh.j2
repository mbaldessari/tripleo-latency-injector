#!/bin/bash
set -e

## Queuing script for "{{ host }}"

TC="/usr/sbin/tc"
RATE="1000Mbps"


function get_nic_from_ip() {
  # Example output from "ip -o r get <ip>":
  # 172.16.1.20 dev vlan30 src 172.16.1.9 \    cache 
  ip=$1
  # dciabrin's clever hack to print the interface after the 'dev' keyword
  ret=$(ip -o r get ${ip} | sed -n 's/.*dev \([^ ]*\).*/\1/p')
  echo "$ret"
}

function get_all_nics() {
  declare -A nics

  for ip in {{ other_ips }}; do
    nic=$(get_nic_from_ip "$ip")
    if [ $nic != "lo" ]; then
      nics["$nic"]="foo"
    fi
  done
  echo "${!nics[@]}"
}

all_nics=$(get_all_nics)

echo "Resetting state"
for nic in $all_nics; do
  echo "Removing qdiscs on nic: $nic"
  $TC qdisc del dev $nic root || /bin/true
done
echo "Flush mangle/OUTPUT table"
iptables -t mangle -F OUTPUT

if [ "x$1" == "x--reset" ]; then
  echo "Only resetting state. Exiting"
  exit 0
fi


echo "All the nics involved in latency changes are: $all_nics"

# Sets latency qdiscs on all involved nics
for nic in $all_nics; do
  echo "Setting up qdiscs for nic: $nic"
  $TC qdisc add dev $nic handle 1: root htb
  # Here we add separate qdiscs for each different latency
{% set seqcount = 15 %}
{% for latency, mark in all_latencies.iteritems() %}

  # *** {{ latency }} -> Mark: {{ mark }} ***
  $TC class add dev $nic parent 1: classid 1:{{ seqcount + loop.index}} htb rate $RATE
  $TC qdisc add dev $nic parent 1:{{ seqcount + loop.index }} handle {{ mark }} netem delay {{ latency }}
  $TC filter add dev $nic parent 1:0 prio 1 protocol ip handle {{ mark }} fw flowid 1:{{ seqcount + loop.index }}
{% endfor %}
done

echo "Marking all packets to destination with proper MARK"
{% for ip, mark in latencies.iteritems() %}
iptables -A OUTPUT -t mangle -d {{ ip }} -j MARK --set-mark {{ mark[1] }} -m comment --comment "delay {{ mark[0] }} from {{ host }} to {{ mark[2] }}"
{% endfor %}
